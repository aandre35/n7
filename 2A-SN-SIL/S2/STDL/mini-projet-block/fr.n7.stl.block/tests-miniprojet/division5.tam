;--------------------------------------------
;VariableDeclaration : struct E { int a; int b;} e = { 31 ,5 }
;--------------------------------------------
PUSH 2
LOADL 31
LOADL 5
STORE (2) 0[SB]
;--------------------------------------------
;VariableDeclaration : struct R { int q; int r;} v = { 0 ,e.a }
;--------------------------------------------
PUSH 2
LOADL 0
; -> VariableAccess: e
LOAD (2) 0[SB]
STORE (2) 2[SB]
; -> VariableAccess: e
;(e.b <= v.r)
;--------------------------------------------
;WHILE 1 : condition : (e.b <= v.r)
;--------------------------------------------
etiq_debut_while_1
LOAD (2) 0[SB]
; -> VariableAccess: v
LOAD (2) 2[SB]
SUBR ILeq
JUMPIF (0) etiq_fin_while_1
; -> VariableAccess: v
;(v.r - e.b)
LOAD (2) 2[SB]
; -> VariableAccess: e
LOAD (2) 0[SB]
SUBR ISub
STORE (1) 3[SB]
; -> VariableAccess: v
;(v.q + 1)
LOAD (2) 2[SB]
LOADL 1
SUBR IAdd
STORE (1) 2[SB]
JUMP etiq_debut_while_1
etiq_fin_while_1
; -> VariableAccess: v
;--------------
;Printer : print v.q
;--------------
LOAD (2) 2[SB]
SUBR IOut
; -> VariableAccess: v
;--------------
;Printer : print v.r
;--------------
LOAD (2) 2[SB]
SUBR IOut
POP (0) 4
HALT

